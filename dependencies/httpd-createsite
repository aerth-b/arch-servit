#!/bin/bash
# MIT LICENSE
# CONTRIBUTORS:
#	aerth@isupon.us ( http://critter.space )
# Contribute @ https://github.com/aerth/httpd-createsite !

    VHOST_CONF=/etc/httpd/conf/extra/servit-arch.conf
    ROOT_UID=0
    NOTROOT=87
    WWW_ROOT=/srv/live/
    WEBUSER=http
    MANAGER=http
    function findUser() {
        thisPID=$$
        origUser=$(whoami)
        thisUser=$origUser

        while [ "$thisUser" = "$origUser" ]
        do
            ARR=($(ps h -p$thisPID -ouser,ppid;))
            thisUser="${ARR[0]}"
            myPPid="${ARR[1]}"
            thisPID=$myPPid
        done

        getent passwd "$thisUser" | cut -d: -f1
    }

    user=$(findUser)
    if [ "$user" -ne "root" ]
      then
      echo "logged in as: $user and will chown new dir to $WEBUSER:$WEBUSER"
      user=$WEBUSER
    else
      echo "logged in as: $user and will chown new dir to $user:$WEBUSER"

    fi
    [ $# -eq 0 ] && { echo "Usage: $0 domain.name [/path/with/slash/]" ; echo "Help: sudo httpd-createsite -h"; exit 1; }
    echo ""
    echo "[The Long Lost httpd-createsite]"
    echo "[Contrib @ github.com/aerth/httpd-createsite]"
    echo "[You are using version 1.0 (now for Arch Linux)]"
    echo "Read help mode with ./httpd-createsite -h to get it working."
    if [ $1 = '-h' ]
            then
              echo "HELP MODE"
        	    echo ""
        	    echo "What this script does: add line 127.0.0.1 {domain.name} to /etc/hosts, create the directory to be served: (/srv/live/domain.name/public_html, creates an 'it works' page, create an apache virtual host config file in /etc/apache2/sites-available/, enables the site (using sudo a2ensite), and restarting the apache server. Thanks for using!"
        	    echo ""
        	    echo ""
        	    echo "To install on arch, we need to make a small addition to httpd.conf underneath the vhosts include block."
        	    echo ""
        	    echo "Look for these lines:"
        	    echo ""
        	    echo "# Virtual hosts"
              echo "#Include conf/extra/httpd-vhosts.conf"
        	    echo ""
        	    echo "and add this line underneath:"
        	    echo "Include conf/extra/servit-arch.conf"
        	    echo ""
        	    echo "usage:"
        	    echo ""
        	    echo "    sudo httpd-createsite example.com /home/sites/"
        	    echo ""
              echo "or to create in default path (/srv/live):"
        	    echo ""
        	    echo "    sudo httpd-createsite example.com"
        	    exit
    fi
    # owner of the site directory

    # check if is root
    if [ "$UID" -ne "$ROOT_UID" ]
            then
            echo "You must be root to run this script."
            exit $NOTROOT
    fi
    if [ -n "$1" ]
            then
            DOMAIN=$1
    else



            echo "You must provide a full domain name for this site, i.e. â€™example.comâ€™ "
            echo -n "Run this script like ./httpd-createsite example.com /path/to/serve/ to create /path/to/serve/example.com/public_html"
            exit
    fi
    if [ -n "$2" ]
            then
            WWW_ROOT=$2
    fi
    # create document root site folder
    sudo mkdir -p ${WWW_ROOT}/$DOMAIN/public_html
    sudo echo "Welcome to $DOMAIN ! It Works!" > ${WWW_ROOT}/$DOMAIN/public_html/index.html
    echo sudo chown $user:$WEBUSER ${WWW_ROOT}/$DOMAIN/public_html/ -R

    #if needed#sudo mkdir -p ${WWW_ROOT}$DOMAIN/public_html
    # vhost file content
    # rewrite mod must be enabled
    CONF="#\n#\n#ADDED BY SERVIT-ARCH\n#\n<VirtualHost *:80>\n\n\tServerName $DOMAIN\n\tServerAlias www.$DOMAIN\n\tDocumentRoot ${WWW_ROOT}$DOMAIN/public_html\n\n\t<Directory ${WWW_ROOT}$DOMAIN/public_html>\n\t\tOrder Deny,Allow\n\t\tAllow from all\n\t\tOptions -Indexes\n\t\tAllowOverride All\n\t</Directory>\n\n</VirtualHost>"
    HOSTEDIT="127.0.0.1    $DOMAIN www.$DOMAIN"
    # write to the vhost config file
    # Updated for Arch! Still need CentOS/RedHat support)
    touch ${VHOST_CONF}
    echo -e $CONF >> ${VHOST_CONF}
    echo "Adding $DOMAIN to /etc/hosts so you may visit http://$DOMAIN in your browser. :D"
    echo $HOSTEDIT >> /etc/hosts
    # enable site configuration
    echo "$DOMAIN was created. In 5 seconds your apache will be reloaded"
    sleep 5
    systemctl restart httpd
    #alternate: sudo service apache2 reload
    echo "Done"
    exit 0
